Visitor Pattern

The Visitor Pattern is like an operating doctor.
THEY DON'T change the core class.
THEY DO change variables and modify functionality.

Example - 
You have a PERSON w/ Broken Arm [Visitable] ---> 
A doctor visits you [Visitor] ---> they operate on you
You now have a PERSON w/ No Broken Arm [Modified Visitable] 

Uses:
AI Behaviour - checking all NPCs in scene to see if to flee
Going through all visitable objects in scene and modifying them
Disabling all UI in scene 
Managing complex object hierarchies in games

+ Can modify all things in a scene easily
+ Changing variables to a class without changing the main class
- Visitors need to access Public Fields, thus we might need to expose more fields then before

Implementation

IVisitable - The main game object that can have visitors
Accept(IVisitor _visitor) - Adds the visitor to the object

IVisitor - The visitor to the game object
Visit(IVisitable _visitable) - Will visit this game object

-> Check the generic folder for a generic solution you might need to modify it.
-> You might need to make your own visitor pattern to add the specific functionality you need.